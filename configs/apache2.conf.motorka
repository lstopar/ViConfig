# This is the main Apache server configuration file.  It contains the
# configuration directives that give the server its instructions.
# See http://httpd.apache.org/docs/2.4/ for detailed information about
# the directives and /usr/share/doc/apache2/README.Debian about Debian specific
# hints.
#
#
# Summary of how the Apache 2 configuration works in Debian:
# The Apache 2 web server configuration in Debian is quite different to
# upstream's suggested way to configure the web server. This is because Debian's
# default Apache2 installation attempts to make adding and removing modules,
# virtual hosts, and extra configuration directives as flexible as possible, in
# order to make automating the changes and administering the server as easy as
# possible.

# It is split into several files forming the configuration hierarchy outlined
# below, all located in the /etc/apache2/ directory:
#
#	/etc/apache2/
#	|-- apache2.conf
#	|	`--  ports.conf
#	|-- mods-enabled
#	|	|-- *.load
#	|	`-- *.conf
#	|-- conf-enabled
#	|	`-- *.conf
# 	`-- sites-enabled
#	 	`-- *.conf
#
#
# * apache2.conf is the main configuration file (this file). It puts the pieces
#   together by including all remaining configuration files when starting up the
#   web server.
#
# * ports.conf is always included from the main configuration file. It is
#   supposed to determine listening ports for incoming connections which can be
#   customized anytime.
#
# * Configuration files in the mods-enabled/, conf-enabled/ and sites-enabled/
#   directories contain particular configuration snippets which manage modules,
#   global configuration fragments, or virtual host configurations,
#   respectively.
#
#   They are activated by symlinking available configuration files from their
#   respective *-available/ counterparts. These should be managed by using our
#   helpers a2enmod/a2dismod, a2ensite/a2dissite and a2enconf/a2disconf. See
#   their respective man pages for detailed information.
#
# * The binary is called apache2. Due to the use of environment variables, in
#   the default configuration, apache2 needs to be started/stopped with
#   /etc/init.d/apache2 or apache2ctl. Calling /usr/bin/apache2 directly will not
#   work with the default configuration.


# Global configuration
#

#
# ServerRoot: The top of the directory tree under which the server's
# configuration, error, and log files are kept.
#
# NOTE!  If you intend to place this on an NFS (or otherwise network)
# mounted filesystem then please read the Mutex documentation (available
# at <URL:http://httpd.apache.org/docs/2.4/mod/core.html#mutex>);
# you will save yourself a lot of trouble.
#
# Do NOT add a slash at the end of the directory path.
#
#ServerRoot "/etc/apache2"

ServerName motorka.ijs.si

#
# The accept serialization lock file MUST BE STORED ON A LOCAL DISK.
#
Mutex file:${APACHE_LOCK_DIR} default

#
# PidFile: The file in which the server should record its process
# identification number when it starts.
# This needs to be set in /etc/apache2/envvars
#
PidFile ${APACHE_PID_FILE}

#
# Timeout: The number of seconds before receives and sends time out.
#
#Timeout 300
Timeout 172800
ProxyTimeout 172800

#
# KeepAlive: Whether or not to allow persistent connections (more than
# one request per connection). Set to "Off" to deactivate.
#
KeepAlive On

#
# MaxKeepAliveRequests: The maximum number of requests to allow
# during a persistent connection. Set to 0 to allow an unlimited amount.
# We recommend you leave this number high, for maximum performance.
#
MaxKeepAliveRequests 100

#
# KeepAliveTimeout: Number of seconds to wait for the next request from the
# same client on the same connection.
#
KeepAliveTimeout 5


# These need to be set in /etc/apache2/envvars
User ${APACHE_RUN_USER}
Group ${APACHE_RUN_GROUP}

#
# HostnameLookups: Log the names of clients or just their IP addresses
# e.g., www.apache.org (on) or 204.62.129.132 (off).
# The default is off because it'd be overall better for the net if people
# had to knowingly turn this feature on, since enabling it means that
# each client request will result in AT LEAST one lookup request to the
# nameserver.
#
HostnameLookups Off

# ErrorLog: The location of the error log file.
# If you do not specify an ErrorLog directive within a <VirtualHost>
# container, error messages relating to that virtual host will be
# logged here.  If you *do* define an error logfile for a <VirtualHost>
# container, that host's errors will be logged there and not here.
#
ErrorLog ${APACHE_LOG_DIR}/error.log

#
# LogLevel: Control the severity of messages logged to the error_log.
# Available values: trace8, ..., trace1, debug, info, notice, warn,
# error, crit, alert, emerg.
# It is also possible to configure the log level for particular modules, e.g.
# "LogLevel info ssl:warn"
#
LogLevel warn

# Include module configuration:
IncludeOptional mods-enabled/*.load
IncludeOptional mods-enabled/*.conf

# Include list of ports to listen on
Include ports.conf

# Sets the default security model of the Apache2 HTTPD server. It does
# not allow access to the root filesystem outside of /usr/share and /var/www.
# The former is used by web applications packaged in Debian,
# the latter may be used for local directories served by the web server. If
# your system is serving content from a sub-directory in /srv you must allow
# access here, or in any related virtual host.

<Directory /usr/share>
	AllowOverride None
	Require all granted
</Directory>

<Directory /var/www/>
	Options Indexes FollowSymLinks
	AllowOverride None
	Require all granted
</Directory>

# StreamStory demo
ProxyPass "/ProaSense/ws"  "ws://95.87.154.209:8888/ws"
ProxyPassReverse "/ProaSense/ws" "ws://95.87.154.209:8888/ws"

ProxyPass "/ProaSense/" "http://localhost:8888/"
ProxyPassReverse "/ProaSense/" "http://localhost:8888/"

# StreamStory - evaluation  
ProxyPass "/lisbon/ws"  "ws://95.87.154.209:8483/ws"
ProxyPassReverse "/lisbon/ws" "ws://95.87.154.209:8483/ws"

ProxyPass "/lisbon/" "http://localhost:8483/"
ProxyPassReverse "/lisbon/" "http://localhost:8483/"

# StreamStory - demo
ProxyPass "/demo/ws"  "ws://95.87.154.209:8787/ws"
ProxyPassReverse "/demo/ws" "ws://95.87.154.209:8787/ws"

ProxyPass "/demo/" "http://localhost:8787/"
ProxyPassReverse "/demo/" "http://localhost:8787/"

# StreamStory - Paper
ProxyPass "/paper/ws"  "ws://localhost:8488/ws"
ProxyPassReverse "/paper/ws" "ws://localhost:8488/ws"

ProxyPass "/paper/" "http://localhost:8488/"
ProxyPassReverse "/paper/" "http://localhost:8488/"

# StreamStory - Brain
ProxyPass "/brain/ws"  "ws://localhost:8489/ws"
ProxyPassReverse "/brain/ws" "ws://localhost:8489/ws"

ProxyPass "/brain/" "http://localhost:8489/"
ProxyPassReverse "/brain/" "http://localhost:8489/"

# StreamStory - Testing
ProxyPass "/test/ws"  "ws://95.87.154.209:8488/ws"
ProxyPassReverse "/test/ws" "ws://95.87.154.209:8488/ws"

ProxyPass "/test/" "http://localhost:8488/"
ProxyPassReverse "/test/" "http://localhost:8488/"

# Legoberry
ProxyPass "/legoberry" "http://localhost:7979"
ProxyPassReverse "/legoberry" "http://localhost:7979"

# Tennis
ProxyPass "/schedule" "http://localhost:8987"
ProxyPassReverse "/schedule" "http://localhost:8987"

# BT Traffic Anomalies
ProxyPass "/traffic" "http://localhost:9121"
ProxyPassReverse "/traffic" "http://localhost:9121"

# BT Traffic Anomalies Development
ProxyPass "/trafficDev" "http://localhost:9421"
ProxyPassReverse "/trafficDev" "http://localhost:9421"

# SearchPoint
ProxyPass "/sp" "http://localhost:8181"
ProxyPassReverse "/sp" "http://localhost:8181"

# SearchPoint - development instance
ProxyPass "/sp-develop" "http://localhost:8182"
ProxyPassReverse "/sp-develop" "http://localhost:8182"

# SearchPoint
ProxyPass "/sp-medline" "http://localhost:8989"
ProxyPassReverse "/sp-medline" "http://localhost:8989"

# AiQ
ProxyPass "/aiq" "http://localhost:7676"
ProxyPassReverse "/aiq" "http://localhost:7676"

# MIDAS Dummy Component
ProxyPass "/midasDummy" "http://localhost:8765/midasDummy"
ProxyPassReverse "/midasDummy" "http://localhost:8765/midasDummy"

# Debugging the MACH remote logger
ProxyPass "/machupdate" "http://localhost:4545"
ProxyPassReverse "/machupdate" "http://localhost:4545"

# MACH Remote Logger
ProxyPass "/meshCategory" "http://localhost:9807/classify"
ProxyPassReverse "/meshCategory" "http://localhost:9807/classify"

# MeSH major category classifier
ProxyPass "/meshMajorCategory" "http://localhost:9808/api/classify"
ProxyPassReverse "/meshMajorCategory" "http://localhost:9808/api/classify"

# MeSH classifier UI
ProxyPass "/mesh-ui" "http://localhost:9204"
ProxyPassReverse "/mesh-ui" "http://localhost:9204"

# MeSH major category classifier
ProxyPass "/mesh-ui-major" "http://localhost:9808"
ProxyPassReverse "/mesh-ui-major" "http://localhost:9808"


# Apartma Kranjska Gora Demo
ProxyPass "/kg" "http://localhost:9104"
ProxyPassReverse "/kg" "http://localhost:9104"

# Apartma Kranjska Gora Demo
ProxyPass "/kg-debug" "http://localhost:7890"
ProxyPassReverse "/kg-debug" "http://localhost:7890"

# Apartma Kranjska Gora Demo
ProxyPass "/sp-widget" "https://pankretas.ijs.si:8443"
ProxyPassReverse "/sp-widget" "https://pankretas.ijs.si:8443"

# Apartma Kranjska Gora Demo
ProxyPass "/livestream" "http://127.0.0.1:9000"
ProxyPassReverse "/livestream" "http://127.0.0.1:9000"

# MACH Backend Test
# MACH Remote Control
ProxyPass "/machbackend/machend/" "http://localhost:3000/machend/"
ProxyPassReverse "/machbackend/machend/" "http://localhost:3000/machend/"
# MACH Remote Control
ProxyPass "/machbackend/client/" "http://localhost:3000/client/"
ProxyPassReverse "/machbackend/client/" "http://localhost:3000/client/"
# MACH UI
ProxyPass "/machbackend" "http://127.0.0.1:8765"
ProxyPassReverse "/machbackend" "http://127.0.0.1:8765"

# Openproject
# Can't use Location block since it would overshadow all the other proxypass directives on CentOS
#Include /etc/openproject/addons/apache2/includes/vhost/*.conf
#Include /etc/openproject/addons/apache2/includes/server/*.conf
#ProxyPass /openproject/ http://127.0.0.1:6000/openproject/
#ProxyPassReverse /openproject/ http://127.0.0.1:6000/openproject/
#ProxyPass /api/ http://127.0.0.1:6000/openproject/api/
#ProxyPassReverse /api/ http://127.0.0.1:6000/openproject/api/

<Directory />
	Options FollowSymLinks
	AllowOverride None
	Require all denied
</Directory>

#<Directory /srv/>
#	Options Indexes FollowSymLinks
#	AllowOverride None
#	Require all granted
#</Directory>

Alias /.well-known/acme-challenge/ /var/www/html/.well-known/acme-challenge/


# AccessFileName: The name of the file to look for in each directory
# for additional configuration directives.  See also the AllowOverride
# directive.
#
AccessFileName .htaccess

#
# The following lines prevent .htaccess and .htpasswd files from being
# viewed by Web clients.
#
<FilesMatch "^\.ht">
	Require all denied
</FilesMatch>

#
# The following directives define some format nicknames for use with
# a CustomLog directive.
#
# These deviate from the Common Log Format definitions in that they use %O
# (the actual bytes sent including headers) instead of %b (the size of the
# requested file), because the latter makes it impossible to detect partial
# requests.
#
# Note that the use of %{X-Forwarded-For}i instead of %h is not recommended.
# Use mod_remoteip instead.
#
LogFormat "%v:%p %h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" vhost_combined
LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\"" combined
LogFormat "%h %l %u %t \"%r\" %>s %O" common
LogFormat "%{Referer}i -> %U" referer
LogFormat "%{User-agent}i" agent

# Include of directories ignores editors' and dpkg's backup files,
# see README.Debian for details.

# Include generic snippets of statements
IncludeOptional conf-enabled/*.conf

# Include the virtual host configurations:
IncludeOptional sites-enabled/*.conf

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
